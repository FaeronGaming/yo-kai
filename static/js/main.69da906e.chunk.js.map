{"version":3,"sources":["JibanyanS.png","data/locations.ts","data/yokai.ts","components/DisplayLocaleMinions.tsx","layout/Section.tsx","layout/Container.tsx","layout/Select.tsx","components/LocationLookup.tsx","layout/Hero.tsx","layout/Tile.tsx","state/userDataContext.tsx","state/useLocalStorage.ts","components/Tracker.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Location","Yokai","minionLocations","Shogunyan","EShroud","CThanalan","LLaNoscea","Jibanyan","CShroud","Hovernyan","SShroud","EThanalan","WLaNoscea","LordEnma","Stormblood","Usapyon","OLaNoscea","WThanalan","MLaNoscea","Venoct","Kyubi","Zazel","Heavensward","Whisper","SThanalan","ULaNoscea","Robonyan","NShroud","Damona","Blizzaria","Manjimutt","LordAnanta","Komasan","Komajiro","Noko","minionJobs","DisplayLocaleMinions","locale","minions","Object","entries","filter","some","location","map","className","minion","key","Section","children","Container","Select","props","LocationLookup","useState","selectedLocation","setSelectedLocation","onChange","e","console","log","target","value","disabled","locationKey","toString","Wrapper","href","to","Hero","title","Tile","as","isAncestor","isChild","isParent","Component","classes","classnames","UserDataContext","createContext","UserDataProvider","initialValue","item","window","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","toStore","Function","setItem","stringify","useLocalStorage","userData","setUserData","Provider","Table","styled","table","ToggleableRow","tr","isDisabled","Tracker","useContext","data","setData","users","keys","user","locations","every","type","checked","newData","div","nyan","Navigation","Link","App","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.69da906e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/JibanyanS.bc6f428d.png\";","export enum Location {\r\n  MLaNoscea = \"Middle La Noscea\",\r\n  LLaNoscea = \"Lower La Noscea\",\r\n  ELaNoscea = \"Eastern La Noscea\",\r\n  WLaNoscea = \"Western La Noscea\",\r\n  ULaNoscea = \"Upper La Noscea\",\r\n  OLaNoscea = \"Outer La Noscea\",\r\n  CShroud = \"Central Shroud\",\r\n  EShroud = \"East Shroud\",\r\n  SShroud = \"South Shroud\",\r\n  NShroud = \"North Shroud\",\r\n  WThanalan = \"Western Thanalan\",\r\n  CThanalan = \"Central Thanalan\",\r\n  EThanalan = \"Eastern Thanalan\",\r\n  SThanalan = \"Southern Thanalan\",\r\n  NThanalan = \"Northern Thanalan\",\r\n  Heavensward = \"All Heavensward Zones\",\r\n  Stormblood = \"All Stormblood Zones\",\r\n}\r\n","import { Location } from \"./locations\"\r\n\r\nexport enum Yokai {\r\n  Shogunyan = \"Shogunyan \",\r\n  Jibanyan = \"Jibanyan \",\r\n  Hovernyan = \"Hovernyan \",\r\n  Venoct = \"Venoct \",\r\n  Kyubi = \"Kyubi \",\r\n  Zazel = \"Zazel \",\r\n  Whisper = \"Whisper \",\r\n  Robonyan = \"Robonyan \",\r\n  Damona = \"Damona \",\r\n  Blizzaria = \"Blizzaria \",\r\n  Manjimutt = \"Manjimutt \",\r\n  Komasan = \"Komasan \",\r\n  Komajiro = \"Komajiro \",\r\n  Noko = \"Noko \",\r\n  LordAnanta = \"Lord Ananta\",\r\n  LordEnma = \"Lord Enma\",\r\n  Usapyon = \"USApyon\",\r\n}\r\n\r\nexport const minionLocations: { [key: string]: Location[] } = {\r\n  [Yokai.Shogunyan]: [Location.EShroud, Location.CThanalan, Location.LLaNoscea],\r\n  [Yokai.Jibanyan]: [Location.CShroud, Location.CThanalan, Location.LLaNoscea],\r\n  [Yokai.Hovernyan]: [Location.SShroud, Location.EThanalan, Location.WLaNoscea],\r\n  [Yokai.LordEnma]: [Location.Stormblood],\r\n  [Yokai.Usapyon]: [Location.OLaNoscea, Location.WThanalan, Location.MLaNoscea],\r\n  [Yokai.Venoct]: [Location.CShroud, Location.WThanalan, Location.MLaNoscea],\r\n  [Yokai.Kyubi]: [Location.CShroud, Location.WThanalan, Location.LLaNoscea],\r\n  [Yokai.Zazel]: [Location.Heavensward],\r\n  [Yokai.Whisper]: [Location.SShroud, Location.SThanalan, Location.ULaNoscea],\r\n  [Yokai.Robonyan]: [Location.NShroud, Location.SThanalan, Location.ULaNoscea],\r\n  [Yokai.Damona]: [Location.Stormblood],\r\n  [Yokai.Blizzaria]: [Location.NShroud, Location.OLaNoscea, Location.MLaNoscea],\r\n  [Yokai.Manjimutt]: [Location.SShroud, Location.EThanalan, Location.ULaNoscea],\r\n  [Yokai.LordAnanta]: [Location.Heavensward],\r\n  [Yokai.Komasan]: [Location.EShroud, Location.EThanalan, Location.WLaNoscea],\r\n  [Yokai.Komajiro]: [Location.EShroud, Location.CThanalan, Location.WLaNoscea],\r\n  [Yokai.Noko]: [Location.NShroud, Location.SThanalan, Location.OLaNoscea],\r\n};\r\n\r\nexport const minionJobs: { [key: string]: string } = {\r\n  [Yokai.Shogunyan]: \"PLD\",\r\n  [Yokai.Jibanyan]: \"WAR\",\r\n  [Yokai.Hovernyan]: \"DRK\",\r\n  [Yokai.LordEnma]: \"GNB\",\r\n  [Yokai.Usapyon]: \"MNK\",\r\n  [Yokai.Venoct]: \"DRG\",\r\n  [Yokai.Kyubi]: \"NIN\",\r\n  [Yokai.Zazel]: \"SAM\",\r\n  [Yokai.Whisper]: \"BRD\",\r\n  [Yokai.Robonyan]: \"MCH\",\r\n  [Yokai.Damona]: \"DNC\",\r\n  [Yokai.Blizzaria]: \"BLM\",\r\n  [Yokai.Manjimutt]: \"SMN\",\r\n  [Yokai.LordAnanta]: \"RDM\",\r\n  [Yokai.Komasan]: \"WHM\",\r\n  [Yokai.Komajiro]: \"SCH\",\r\n  [Yokai.Noko]: \"AST\",\r\n};\r\n","import React from 'react';\r\nimport { Location } from '../data/locations';\r\nimport { minionLocations } from '../data/yokai';\r\n\r\ninterface DisplayLocalMinionProps {\r\n  locale: Location | string\r\n}\r\n\r\nexport const DisplayLocaleMinions: React.FC<DisplayLocalMinionProps> = ({ locale }) => {\r\n  if (!locale) return null;\r\n\r\n  const minions = Object.entries(minionLocations).filter(([, locations]) => {\r\n    return locations.some(location => location === locale);\r\n  }).map(([minion]) => minion)\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <ul>\r\n        {minions.map(minion => (\r\n          <li key={minion}>{minion}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport 'bulma/css/bulma.css';\r\n\r\nexport const Section: React.FC = ({ children }) => (\r\n  <section className=\"section\">{children}</section>\r\n);\r\n","import React from 'react';\r\nimport 'bulma/css/bulma.css';\r\n\r\nexport const Container: React.FC = ({ children }) => (\r\n  <div className=\"container\">{children}</div>\r\n);\r\n","import React from 'react';\r\nimport 'bulma/css/bulma.css';\r\n\r\nexport type SelectionEvent = { target: { value: string } };\r\n\r\ninterface SelectProps {\r\n  onChange: (e: SelectionEvent) => void,\r\n  value: string\r\n}\r\n\r\nexport const Select: React.FC<SelectProps> = (props) => (\r\n  <div className=\"select\">\r\n    <select {...props} />\r\n  </div>\r\n);\r\n","import React, { useState } from 'react';\r\nimport { Location } from '../data/locations';\r\nimport { DisplayLocaleMinions } from './DisplayLocaleMinions';\r\nimport { Section } from '../layout/Section';\r\nimport { Container } from '../layout/Container';\r\nimport { Select } from '../layout/Select';\r\n\r\ntype SelectionEvent = { target: { value: string } };\r\n\r\nexport function LocationLookup() {\r\n  const [selectedLocation, setSelectedLocation] = useState<string>('');\r\n\r\n  const selectionChanged = (e: SelectionEvent) => {\r\n    console.log(e.target.value);\r\n    setSelectedLocation(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Section>\r\n      <h2 className=\"title\">Minion Lookup</h2>\r\n      <Container>\r\n        <Select onChange={selectionChanged} value={selectedLocation}>\r\n          <option value=\"\" disabled>--Select a Location--</option>\r\n          {\r\n            Object.entries(Location).map(([locationKey, location]) => {\r\n              return (\r\n                <option key={locationKey} value={location}>\r\n                  {location.toString()}\r\n                </option>\r\n              )\r\n            })\r\n          }\r\n        </Select>\r\n        <DisplayLocaleMinions locale={selectedLocation} />\r\n      </Container>\r\n    </Section>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport 'bulma/css/bulma.css';\r\nimport { Container } from './Container';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface HeroProps {\r\n  title?: string;\r\n  href?: string;\r\n}\r\n\r\nconst Wrapper: React.FC<HeroProps> = ({ children, href }) => \r\n  href ? <Link to={href}>{children}</Link> : <>{children}</>;\r\n\r\nexport const Hero: React.FC<HeroProps> = ({ children, title, href }) => {\r\n  return (\r\n    <section className=\"hero\">\r\n      <div className=\"hero-body\">\r\n        <Container>\r\n          {title && (\r\n            <Wrapper href={href}>\r\n              <h1 className=\"title\">{title}</h1>\r\n            </Wrapper>\r\n          )}\r\n        </Container>\r\n      </div>\r\n    </section>\r\n  )\r\n};\r\n","import React from 'react';\r\nimport 'bulma/css/bulma.css';\r\nimport classnames from 'classnames';\r\n\r\ninterface ComponentProps {\r\n  className?: string\r\n}\r\n\r\ninterface TileProps {\r\n  as?: string | Function;\r\n  title?: string;\r\n  isAncestor?: boolean;\r\n  isParent?: boolean;\r\n  isChild?: boolean;\r\n  className?: string;\r\n  to?: string;\r\n}\r\n\r\nexport const Tile: React.FC<TileProps> = ({ as, children, isAncestor, isChild, isParent, title, className, ...props }) => {\r\n  const Component = (as || \"div\") as unknown as React.FC<ComponentProps>;\r\n  const classes = classnames('tile', className, {\r\n    'is-ancestor': isAncestor,\r\n    'is-parent': isParent,\r\n    'is-child': isChild\r\n  });\r\n  return (\r\n    <Component className={classes} {...props}>\r\n      {title && <p className=\"title\">{title}</p>}\r\n      {children}\r\n    </Component>\r\n  );\r\n};\r\n","import React, { createContext, useContext } from 'react';\r\nimport { useLocalStorage } from './useLocalStorage';\r\n\r\ninterface UserData {\r\n  [username: string]: {\r\n    [key: string]: boolean;\r\n  };\r\n}\r\n\r\ntype DataContext = [UserData, (data: UserData) => void];\r\n\r\nconst UserDataContext = createContext<DataContext>([{}, () => {}]);\r\n\r\nexport const useData = () => useContext(UserDataContext);\r\n\r\nexport function useUsernames() {\r\n  const [userData] = useContext(UserDataContext);\r\n  return Object.keys(userData);\r\n}\r\n\r\nexport const UserDataProvider: React.FC = ({ children }) => {\r\n  const [userData, setUserData] = useLocalStorage<UserData>('userData', {\r\n    'You': {}\r\n  });\r\n\r\n  return (\r\n    <UserDataContext.Provider value={[userData, setUserData]}>\r\n      {children}\r\n    </UserDataContext.Provider>\r\n  )\r\n};\r\n","import { useState } from \"react\";\r\n\r\ntype SetValueCallback<T> = (currentState: T) => T;\r\n\r\ntype LocalStorage<T> = [\r\n  T,\r\n  (value: T | SetValueCallback<T>) => void\r\n];\r\n\r\nexport function useLocalStorage<T>(key: string, initialValue: T): LocalStorage<T> {\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      const item = window.localStorage.getItem(key);\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (e) {\r\n      console.error(e);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  const setValue = (value: T | SetValueCallback<T>) => {\r\n    try {\r\n      const toStore = value instanceof Function ? value(storedValue) : value;\r\n      setStoredValue(toStore);\r\n      window.localStorage.setItem(key, JSON.stringify(toStore));\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  return [storedValue, setValue];\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Section } from '../layout/Section';\r\nimport { Container } from '../layout/Container';\r\nimport { minionLocations, minionJobs } from '../data/yokai';\r\nimport { useData } from '../state/userDataContext';\r\n\r\ninterface ToggleableRowProps {\r\n  isDisabled: boolean;\r\n}\r\n\r\nconst transparancy = 0.45;\r\n\r\nconst Table = styled.table`\r\n  background-color:rgba(255,255,255,${transparancy});\r\n  font-weight: 700;\r\n`;\r\n\r\nconst ToggleableRow = styled.tr<ToggleableRowProps>`\r\n  ${({ isDisabled }) => isDisabled ? `background-color:rgba(169,169,169,${transparancy});` : ''}\r\n  text-decoration: ${({ isDisabled }) => isDisabled ? 'line-through': 'none' };\r\n`;\r\n\r\nexport const Tracker: React.FC = () => {\r\n  const [data, setData] = useData();\r\n  const users = Object.keys(data);\r\n  return (\r\n    <Section>\r\n      <h2 className=\"title\">Tracker</h2>\r\n      <Container>\r\n        <Table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <td>Class</td>\r\n              <td>Minion</td>\r\n              {users.map(user => <td key={user}>{user}</td>)}\r\n              <td>Areas</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {Object.entries(minionLocations).map(([minion, locations]) => {\r\n              const isDisabled = users.every(user => data[user][minion]);\r\n              return (\r\n                <ToggleableRow key={minion} isDisabled={isDisabled}>\r\n                  <td>{minionJobs[minion]}</td>\r\n                  <td>{minion}</td>\r\n                  {users.map(user => {\r\n                    const handler = (e: { target: { checked: boolean; }; }) => {\r\n                      const newData = {\r\n                        ...data,\r\n                        [user]: {\r\n                          ...data[user],\r\n                          [minion]: e.target.checked\r\n                        }\r\n                      };\r\n                      setData(newData);\r\n                    };\r\n                    return (\r\n                      <td key={user}>\r\n                        <label className=\"checkbox\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={data[user][minion] || false}\r\n                            onChange={handler}\r\n                          />\r\n                        </label>\r\n                      </td>\r\n                    );\r\n                  })}\r\n                  <td>\r\n                    <ul>\r\n                      {locations.map(location => (\r\n                        <li key={location}>{location}</li>\r\n                      ))}\r\n                    </ul>\r\n                  </td>\r\n                </ToggleableRow>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n    </Section>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\r\nimport { LocationLookup } from './components/LocationLookup';\r\nimport { Hero } from './layout/Hero';\r\nimport { Tile } from './layout/Tile';\r\nimport { UserDataProvider } from './state/userDataContext';\r\n// import { Configure } from './components/Configure';\r\nimport { Tracker } from './components/Tracker';\r\nimport nyan from './JibanyanS.png';\r\n\r\nconst Wrapper = styled.div`\r\n  background: url(${nyan}) no-repeat center center fixed;\r\n  background-size: cover;\r\n`;\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <Tile isAncestor>\r\n      <Tile isParent>\r\n        <Tile\r\n          as={Link}\r\n          to=\"/yo-kai/minion-location-lookup\"\r\n          isChild\r\n          className=\"is-4 box\"\r\n          title=\"Minion Location Lookup\"\r\n        />\r\n        {/*<Tile\r\n          as={Link}\r\n          to=\"/yo-kai/configure\"\r\n          isChild\r\n          className=\"is-4 box\"\r\n          title=\"Configure\"\r\n        />*/}\r\n        <Tile\r\n          as={Link}\r\n          to=\"/yo-kai/tracker\"\r\n          isChild\r\n          className=\"is-4 box\"\r\n          title=\"Tracker\"\r\n        />\r\n      </Tile>\r\n    </Tile>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Wrapper>\r\n      <UserDataProvider>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route path=\"/yo-kai\">\r\n            <Hero title=\"Yo-kai Event Tools\" href=\"/yo-kai\" />\r\n              <Switch>\r\n                <Route path=\"/yo-kai/minion-location-lookup\">\r\n                  <LocationLookup />\r\n                </Route>\r\n                {/*<Route path=\"/yo-kai/configure\">\r\n                  <Configure />\r\n                </Route>*/}\r\n                <Route path=\"/yo-kai/tracker\">\r\n                  <Tracker />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                  <Navigation />\r\n                </Route>\r\n              </Switch>\r\n            </Route>\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </UserDataProvider>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}